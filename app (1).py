# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VjNaptlkczpER8ywd_TXEpjgLMhoGBr2
"""

# app.py
import streamlit as st
import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
from PIL import Image

# Page setup
st.set_page_config(page_title="Diabetes Prediction with Tamil Songs", layout="wide")

# 🎵 Sidebar: Tamil Songs + Your Image
with st.sidebar:
    st.markdown("## 🎵 Tamil Songs")

    # Song 1: Ava Enna (Folk-style)
    st.markdown("### 🎤 Folk Song – *Ava Enna*")
    st.video("https://www.youtube.com/watch?v=Y7gYvgar2lw")
    st.caption("🔥 *Ava Enna* – Tamil folk-style emotional song")

    # Song 2: Appa–Ponnu Theme
    st.markdown("### 👨‍👧 Appa–Ponnu Song")
    st.video("https://www.youtube.com/watch?v=ROJ4tgqEhi4")
    st.caption("💖 Heartwarming Tamil father–daughter song")

    # Display your uploaded image
    st.markdown("### 📸 Family Moment")
    try:
        image = Image.open("WhatsApp_Image.jpg")  # Ensure this file exists
        st.image(image, caption="Brother & Sister ❤️", width=200)
    except Exception as e:
        st.error("❌ Error loading image. Please ensure 'WhatsApp_Image.jpg' is in the same folder.")

# 🏥 Title
st.title("🩺 Diabetes Prediction using Logistic Regression")

# 📊 Sample Dataset
data = {
    'age': [50, 31, 32, 45, 29],
    'plas': [148, 85, 89, 120, 94],
    'insu': [0, 0, 94, 0, 168],
    'mass': [33.6, 26.6, 28.1, 35.3, 23.1],
    'class': [1, 0, 0, 1, 0]
}
df = pd.DataFrame(data)

# Dataset preview
st.subheader("📊 Dataset Preview")
st.dataframe(df)

# Train model
X = df[['age', 'plas', 'insu', 'mass']]
y = df['class']
model = LogisticRegression()
model.fit(X, y)

# Input fields
st.subheader("📝 Enter Patient Data")
age = st.number_input("Age", min_value=1, max_value=120, value=30)
plas = st.number_input("Plasma Glucose", min_value=0, max_value=200, value=100)
insu = st.number_input("Insulin", min_value=0, max_value=1000, value=100)
mass = st.number_input("BMI", min_value=10.0, max_value=80.0, value=25.0)

# Predict button
if st.button("Predict"):
    pred = model.predict([[age, plas, insu, mass]])
    if pred[0] == 1:
        st.success("🎯 Prediction: Diabetic")
    else:
        st.success("💪 Prediction: Not Diabetic")

# Accuracy
st.subheader("✅ Model Accuracy")
train_pred = model.predict(X)
accuracy = accuracy_score(y, train_pred)
st.write(f"Accuracy: {accuracy:.2f}")

# Commented out IPython magic to ensure Python compatibility.
# %pip install -q streamlit scikit-learn pandas