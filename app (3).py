# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VjNaptlkczpER8ywd_TXEpjgLMhoGBr2
"""

import streamlit as st
import pickle
import numpy as np
import pandas as pd
import base64
import urllib.request
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

# Load background image
image_url = "https://github.com/harishmani7846/regress/blob/main/WhatsApp%20Image%20.jpg"
urllib.request.urlretrieve(image_url, "1000057793.jpg")

def add_bg_from_local(image_file):
    with open(image_file, "rb") as file:
        encoded = base64.b64encode(file.read()).decode()
    st.markdown(
         f"""
         <style>
         .stApp {{
             background-image: url("data:image/jpg;base64,{encoded}");
             background-size: cover;
             background-attachment: fixed;
         }}
         </style>
         """,
         unsafe_allow_html=True
     )

add_bg_from_local('/content/WhatsApp Image 2025-06-19 at 18.36.39_b8c97fdb.jpg')

# üéµ Add Tamil song
st.markdown(
    """
    <audio controls>
        <source src="https://github.com/harishmani7846/regress/blob/main/Va-Va-En-Devathaye.mp3 type="audio/mpeg">
    </audio>
    """,
    unsafe_allow_html=True
)
st.markdown(
    """
    <audio autoplay loop>
        <source src="https://github.com/harishmani7846/regress/blob/main/Unkoodave%20Porakkanum(KoshalWorld.Com).mp3" type="audio/mpeg">
        Your browser does not support the audio element.
    </audio>
    """,
    unsafe_allow_html=True
)

# Title
st.title("ü©∫ Diabetes Prediction App")

# üìä Sample dataset
data = {
    'age': [50, 31, 32, 45, 29],
    'plas': [148, 85, 89, 120, 94],
    'insu': [0, 0, 94, 0, 168],
    'mass': [33.6, 26.6, 28.1, 35.3, 23.1],
    'class': [1, 0, 0, 1, 0]
}
df = pd.DataFrame(data)

# Train model
X = df[['age', 'plas', 'insu', 'mass']]
y = df['class']
model = LogisticRegression()
model.fit(X, y)

# Input fields
st.subheader("üìù Enter Patient Data")
age = st.number_input("Age", min_value=1, max_value=120, value=30)
plas = st.number_input("Plasma Glucose", min_value=0, max_value=200, value=100)
insu = st.number_input("Insulin", min_value=0, max_value=1000, value=100)
mass = st.number_input("BMI", min_value=10.0, max_value=80.0, value=25.0)

# Predict button
if st.button("Predict"):
    input_data = np.array([[age, plas, insu, mass]])
    pred = model.predict(input_data)
    if pred[0] == 1:
        st.success("üéØ Prediction: Diabetic")
    else:
        st.success("üí™ Prediction: Not Diabetic")

# Accuracy
st.subheader("‚úÖ Model Accuracy")
train_pred = model.predict(X)
acc = accuracy_score(y, train_pred)
st.write(f"Accuracy: {acc:.2f}")

# Save model
with open("diabetes_model.pkl", "wb") as f:
    pickle.dump(model, f)

from google.colab import files

# Download file
files.download("diabetes_model.pkl")

# Commented out IPython magic to ensure Python compatibility.
# %pip install -q streamlit scikit-learn pandas